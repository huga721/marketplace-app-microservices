services:

  postgres-product:
    container_name: postgres-product
    image: postgres:15.4
    environment:
      POSTGRES_USER: admin-product
      POSTGRES_PASSWORD: admin-product
      PGDATA: /data/postgres
    volumes:
      - postgres-product:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  postgres-basket:
    container_name: postgres-basket
    image: postgres:15.4
    environment:
      POSTGRES_USER: admin-basket
      POSTGRES_PASSWORD: admin-basket
      PGDATA: /data/postgres
      PGPORT: 5433
    volumes:
      - postgres-basket:/data/postgres
    ports:
      - "5433:5433"
    networks:
      - postgres
    restart: unless-stopped

  postgres-keycloak:
    container_name: postgres-keycloak
    image: postgres:15.4
    environment:
      POSTGRES_USER: admin-keycloak
      POSTGRES_PASSWORD: admin-password
      PGDATA: /data/postgres
      PGPORT: 5434
      POSTGRES_DB: keycloak
    volumes:
      - postgres-keycloak:/data/postgres
    ports:
      - "5434:5434"
    networks:
      - postgres
    restart: unless-stopped

  postgres-user:
    container_name: postgres-user
    image: postgres
    environment:
      POSTGRES_USER: admin-user
      POSTGRES_PASSWORD: admin-user
      PGDATA: /data/postgres
      PGPORT: 5435
    volumes:
      - postgres-user:/data/postgres
    ports:
      - "5435:5435"
    networks:
      - postgres
    restart: unless-stopped

  postgres-order:
    container_name: postgres-order
    image: postgres
    environment:
      POSTGRES_USER: admin-order
      POSTGRES_PASSWORD: admin-order
      PGDATA: /data/postgres
      PGPORT: 5436
    volumes:
      - postgres-order:/data/postgres
    ports:
      - "5436:5436"
    networks:
      - postgres
    restart: unless-stopped

  postgres-notification:
    container_name: postgres-notification
    image: postgres
    environment:
      POSTGRES_USER: admin-notification
      POSTGRES_PASSWORD: admin-notification
      PGDATA: /data/postgres
      PGPORT: 5437
    volumes:
      - postgres-notification:/data/postgres
    ports:
      - "5437:5437"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:22.0.1
    command:
      - start-dev
      - -Dkeycloak.migration.action=import
      - -Dkeycloak.migration.provider=singleFile
      - -Dkeycloak.migration.realmName=marketplace-app-realm
      - -Dkeycloak.migration.file=/tmp/export/marketplace-realm.json
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-keycloak:5434/keycloak
      KC_DB_USERNAME: admin-keycloak
      KC_DB_PASSWORD: admin-password
    volumes:
      - ./keycloak/marketplace-realm.json:/tmp/export/marketplace-realm.json
    ports:
      - "8181:8080"
    depends_on:
      - postgres-keycloak
    networks:
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

networks:
  postgres:
    driver: bridge

volumes:
  postgres-product:
  postgres-basket:
  postgres-keycloak:
  postgres-user:
  postgres-order:
  postgres-notification:
  pgadmin: