{
  "id": "8f9220f3-6f33-480d-9cb0-f3fe8853f3dc",
  "realm": "marketplace-app-realm",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 1200,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 3600,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 1200,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": false,
  "duplicateEmailsAllowed": true,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": true,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "7ed91344-8487-492e-9d42-a81d762e6993",
        "name": "admin",
        "description": "",
        "composite": true,
        "composites": {
          "client": {
            "marketplace-app": [
              "role-admin"
            ]
          }
        },
        "clientRole": false,
        "containerId": "8f9220f3-6f33-480d-9cb0-f3fe8853f3dc",
        "attributes": {}
      },
      {
        "id": "b57b2f21-339d-4663-ac7a-d565a55d76a0",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "8f9220f3-6f33-480d-9cb0-f3fe8853f3dc",
        "attributes": {}
      },
      {
        "id": "955e6f34-555d-47f2-8662-a8bd290c7bf6",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "8f9220f3-6f33-480d-9cb0-f3fe8853f3dc",
        "attributes": {}
      },
      {
        "id": "de67145d-3e48-4778-848c-7f3bfd783289",
        "name": "default-roles-marketplace-app-realm",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "8f9220f3-6f33-480d-9cb0-f3fe8853f3dc",
        "attributes": {}
      },
      {
        "id": "68aed4e0-07cc-4f1b-81cf-fc58c2b294aa",
        "name": "user",
        "description": "",
        "composite": true,
        "composites": {
          "client": {
            "marketplace-app": [
              "role-user"
            ]
          }
        },
        "clientRole": false,
        "containerId": "8f9220f3-6f33-480d-9cb0-f3fe8853f3dc",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "e0fb7d40-8e59-4339-9869-3c03a4c148f1",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-identity-providers",
                "manage-identity-providers",
                "manage-realm",
                "manage-users",
                "query-realms",
                "view-clients",
                "manage-events",
                "query-groups",
                "view-realm",
                "view-events",
                "view-authorization",
                "create-client",
                "manage-authorization",
                "manage-clients",
                "view-users",
                "query-clients",
                "impersonation",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "a98a080e-408d-4a0a-8e9c-576c44d63298",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "a519f5f2-85ab-4b77-9ea3-483692617858",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "2a43413c-2948-42f0-8d47-2bca4875f177",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "de359f1b-36be-4458-ad60-cfea4348c03b",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "347f53c6-9168-42b7-bd0e-fe7067664189",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "fb3d408a-8350-4820-b44f-645ec6efe613",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "92b68c72-c697-403a-b900-80f2b2183300",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "070914d3-0bac-4065-a1c8-2b76f948d941",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "5e2921a6-9c7d-403e-b238-0cc32ebf566f",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "99687792-479f-4a11-8e33-f6e767c60f16",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "57f700a5-6302-4a27-bb11-def4a45edcf4",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "3e6f441c-87b9-45cc-af9c-2c75e6da6c40",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "1be3a0dd-a078-4469-a859-f62ebf3513eb",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "57c8501e-fafe-47fc-ae29-77d43c76729b",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "3dd0669f-1bfa-45bb-9db4-218f41edfc53",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "075e07e3-23f1-4f06-864c-b3368fa8c0db",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "3febe3dd-c266-4eb7-b79c-0762bf3ba742",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        },
        {
          "id": "26856626-5adc-42bd-8495-7863b411f30c",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "c3751876-085a-4f82-bb4d-8b40905e7c45",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "cbf49b21-60d3-4073-8377-16421deae731",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "4b92dfdb-b062-42fd-9ff7-a8ad9244490e",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "ffb96003-839b-4ac0-b2eb-f89931317a32",
          "attributes": {}
        },
        {
          "id": "cbe20033-6a16-4dae-895c-0d39b6d105e2",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "ffb96003-839b-4ac0-b2eb-f89931317a32",
          "attributes": {}
        },
        {
          "id": "8b744a97-977e-4bef-b321-e88e8dc85c1c",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "ffb96003-839b-4ac0-b2eb-f89931317a32",
          "attributes": {}
        },
        {
          "id": "2a616e36-6fcf-402e-a7b2-5d7594987b7f",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "ffb96003-839b-4ac0-b2eb-f89931317a32",
          "attributes": {}
        },
        {
          "id": "acd12bcc-931c-49c5-8206-e115969e9ea8",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "ffb96003-839b-4ac0-b2eb-f89931317a32",
          "attributes": {}
        },
        {
          "id": "07de00f4-7fdd-405a-b87c-a382565e722d",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "ffb96003-839b-4ac0-b2eb-f89931317a32",
          "attributes": {}
        },
        {
          "id": "1a24bd68-d227-4c7d-bc6e-1ca35209925a",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "ffb96003-839b-4ac0-b2eb-f89931317a32",
          "attributes": {}
        },
        {
          "id": "2a3b5a11-1d51-4121-bfbe-9b86f042516e",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "ffb96003-839b-4ac0-b2eb-f89931317a32",
          "attributes": {}
        }
      ],
      "marketplace-app": [
        {
          "id": "0515be5f-a1d2-4661-a5dd-20be37dfa091",
          "name": "role-admin",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "15e33682-dff1-44df-a999-5e24232ec054",
          "attributes": {}
        },
        {
          "id": "32a7a308-d0a7-47c6-b8bb-b1471320d33b",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "15e33682-dff1-44df-a999-5e24232ec054",
          "attributes": {}
        },
        {
          "id": "67401501-9a30-4745-bbed-94e25d1ccf48",
          "name": "role-user",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "15e33682-dff1-44df-a999-5e24232ec054",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "de67145d-3e48-4778-848c-7f3bfd783289",
    "name": "default-roles-marketplace-app-realm",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "8f9220f3-6f33-480d-9cb0-f3fe8853f3dc"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppMicrosoftAuthenticatorName",
    "totpAppGoogleName",
    "totpAppFreeOTPName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "e4b6c8fb-a68a-4f10-bffc-ef2c037484e8",
      "createdTimestamp": 1696669616640,
      "username": "admin",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "",
      "lastName": "",
      "credentials": [
        {
          "id": "bc6da5e6-cab5-43a2-9934-899151ae8e84",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1697036709730,
          "secretData": "{\"value\":\"9W8lsDGdng44b6vpnTQtb6dH4zIyOPV0vln6bfXWfSU=\",\"salt\":\"UXC7TJMvg3KgHheBNO/bMg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-marketplace-app-realm",
        "admin"
      ],
      "clientRoles": {
        "realm-management": [
          "view-identity-providers",
          "manage-identity-providers",
          "manage-realm",
          "manage-users",
          "query-realms",
          "view-clients",
          "manage-events",
          "query-groups",
          "view-realm",
          "view-events",
          "view-authorization",
          "manage-clients",
          "view-users",
          "manage-authorization",
          "create-client",
          "query-clients",
          "query-users"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "caedd3a9-062b-457b-94a1-b893f0b21b4e",
      "createdTimestamp": 1697016757566,
      "username": "moderator",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Karol",
      "lastName": "Sztaba",
      "email": "ks@gmail.com",
      "credentials": [
        {
          "id": "34596cce-72ce-4ef1-a9cc-8670e7a83cd3",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1697016772914,
          "secretData": "{\"value\":\"RggdAY1GZMTgW4giVrQC3BjolO6lfD5Ii/SyMZdO25w=\",\"salt\":\"IoKwjwvuCwU50My0XlKAtg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "admin",
        "uma_authorization",
        "default-roles-marketplace-app-realm",
        "user"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "e06919ed-dff5-4ca0-a0ad-ab0ca0a90a88",
      "createdTimestamp": 1697016315425,
      "username": "speedy",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Matheo",
      "lastName": "Erwin",
      "email": "mefake@gmail.com",
      "credentials": [
        {
          "id": "314b55d8-52d6-4a6a-86a0-9aea7d7fa20d",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1696693618856,
          "secretData": "{\"value\":\"18A0rCCqirvRNewSk3FHi0wfzAoLmPHmrg7XbHTfOhM=\",\"salt\":\"VYy47vgCjfkjnhWe9/Vz9g==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-marketplace-app-realm",
        "user"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "ae885313-4d31-4682-8360-09456c7ac312",
      "createdTimestamp": 1697016315425,
      "username": "giver",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Fredi",
      "lastName": "Kamionka",
      "email": "fkfake@gmail.com",
      "credentials": [
        {
          "id": "314b55d8-52d6-4a6a-86a0-9aea7d7fd20d",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1696693618856,
          "secretData": "{\"value\":\"18A0rCCqirvRNewSk3FHi0wfzAoLmPHmrg7XbHTfOhM=\",\"salt\":\"VYy47vgCjfkjnhWe9/Vz9g==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-marketplace-app-realm",
        "user"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "1bdace30-cf8e-471d-b925-be7474f82e6e",
      "createdTimestamp": 1697016315425,
      "username": "walt",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Walter",
      "lastName": "White",
      "email": "walt@gmail.com",
      "credentials": [
        {
          "id": "f91d98ec-fc0d-442b-9d09-9c5bca1f2da4",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1697016550410,
          "secretData": "{\"value\":\"OJB0emEzmDo0131bFNIMVdFtDqTAvWpUcoMp31w6ZE8=\",\"salt\":\"oDLZeS1TXY0cjes5hruWKg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-marketplace-app-realm",
        "user"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "ffb96003-839b-4ac0-b2eb-f89931317a32",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/marketplace-app-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/marketplace-app-realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5d36760b-6897-4a53-a5e8-a2e23975e4ec",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/marketplace-app-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/marketplace-app-realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "ff4e0cf8-94d9-4bfd-87e5-1256be285ead",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f5f8560c-13ec-45f7-be9f-0007fa9640f8",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cbf49b21-60d3-4073-8377-16421deae731",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "15e33682-dff1-44df-a999-5e24232ec054",
      "clientId": "marketplace-app",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:8181",
      "adminUrl": "http://localhost:8080",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "TehmCIP2NYurYk1J2d8XfszkNYc9ujZg",
      "redirectUris": [
        "http://localhost:8080/*"
      ],
      "webOrigins": [
        "http://localhost:8080"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1697036431",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "b2ebf802-f51c-422d-8c2a-09e89457a069",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a4b7cb5e-623d-4807-ae43-5365f3b01263",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "423cc662-48c4-4c54-b0b4-edd91fb9ffdb",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b0c02ab2-ec38-4bd0-8c8b-dae0a248c5e8",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4a50106c-7ae4-4f9b-a9c8-d351958c5931",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/marketplace-app-realm/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/marketplace-app-realm/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "aba8c4e1-af37-465a-8521-032c0d121da5",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "73320b8a-1187-488f-ba41-a54caa3cf633",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "361821f2-b99c-4c4e-be91-e1b80b57170f",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "c0970452-7795-44b0-8b3c-d3bc8ce5ae56",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "66a032b2-ebc1-4c5a-9e09-3272d1160d2e",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6b9d0ec9-4d40-44ce-b3db-770a54e47ea1",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0075aa1b-ff65-4f9c-87ae-7dfeaefe62ec",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "38ca6672-dffd-400c-a75a-7fe001b5b1e0",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d3b0c89b-dff5-47e6-8c48-7649a55b95fa",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "eb99fc27-cd20-4c50-9af4-539513daff6f",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "95de010b-d51b-4311-979c-63db5b33f192",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "537be0b5-c336-40f9-b40b-20e84700f70d",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "567acba0-f668-4bd6-9145-e8d6d7c0b6f0",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "49fb6797-0a78-4f67-9bea-e009bfce2613",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "19d0698e-22e6-4a5f-b99e-4bc617a07935",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bba1b0b3-ec3b-4577-b761-4eb717c3d49b",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "13ded1c3-a0ed-483b-9e76-cdd1335659a5",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "5dd39492-9ff7-492d-92e4-75b43859042b",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "239bbd91-da67-4262-bec1-5be5a6567720",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2443a18f-3d19-453c-a786-c519775a3c7b",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d637fbda-0db7-4832-abc1-fba3706a973d",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "d23268ea-9f1e-49a3-9466-19147a5fe71b",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "868ecf6b-b814-4898-b9bc-c019036d754a",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "67bd0ab0-75fe-4e64-8b7b-b50ac4aeb769",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "f1d37146-856b-4b15-953e-ccb3ce15a567",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6c54bc85-4992-4e69-9f21-b6f83358edeb",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "a0ab639b-e889-41a6-9608-afa93fc48e8c",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "dd33b578-ee28-41d5-ad3f-6758d3baeec5",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "3d9d9a52-03ed-402a-a070-d39593d20c95",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "64ec64db-d0c2-4148-b8d2-25fdf2647799",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "da958fc3-c5dd-457f-a0e6-8a2e75093034",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "9499cd8c-209b-419c-9d8f-5646685d8a0f",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "ea11625e-cb11-412b-aaa4-77e5925b6868",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "7fcde9a5-be38-4ae8-a1fe-67718ab1121e",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "f98a7ee6-1c7c-4b4d-8322-52679cca230a",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5bfb0555-c093-4fe8-83ff-a5deb2b9fd6b",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "96257efc-e69c-4c17-a575-3f79496d1f4d",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "00141d6e-be78-41e0-a005-38dbe47a5b95",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "loginTheme": "base",
  "accountTheme": "base",
  "adminTheme": "",
  "emailTheme": "",
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [
    "SEND_RESET_PASSWORD",
    "UPDATE_CONSENT_ERROR",
    "GRANT_CONSENT",
    "VERIFY_PROFILE_ERROR",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "UPDATE_TOTP",
    "LOGIN_ERROR",
    "CLIENT_LOGIN",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
    "RESTART_AUTHENTICATION",
    "CLIENT_INFO",
    "IMPERSONATE",
    "UPDATE_PROFILE_ERROR",
    "LOGIN",
    "OAUTH2_DEVICE_VERIFY_USER_CODE",
    "UPDATE_PASSWORD_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "TOKEN_EXCHANGE",
    "AUTHREQID_TO_TOKEN",
    "LOGOUT",
    "REGISTER",
    "DELETE_ACCOUNT_ERROR",
    "CLIENT_REGISTER",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "DELETE_ACCOUNT",
    "UPDATE_PASSWORD",
    "CLIENT_DELETE",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "CLIENT_DELETE_ERROR",
    "VERIFY_EMAIL",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "EXECUTE_ACTIONS",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "TOKEN_EXCHANGE_ERROR",
    "PERMISSION_TOKEN",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "SEND_VERIFY_EMAIL",
    "OAUTH2_DEVICE_AUTH",
    "EXECUTE_ACTIONS_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "OAUTH2_DEVICE_CODE_TO_TOKEN",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
    "UPDATE_EMAIL",
    "REGISTER_ERROR",
    "REVOKE_GRANT_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "LOGOUT_ERROR",
    "UPDATE_EMAIL_ERROR",
    "CLIENT_UPDATE_ERROR",
    "AUTHREQID_TO_TOKEN_ERROR",
    "UPDATE_PROFILE",
    "CLIENT_REGISTER_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "SEND_IDENTITY_PROVIDER_LINK",
    "SEND_VERIFY_EMAIL_ERROR",
    "RESET_PASSWORD",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "OAUTH2_DEVICE_AUTH_ERROR",
    "UPDATE_CONSENT",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_RESET_PASSWORD_ERROR",
    "CLIENT_UPDATE",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "UPDATE_TOTP_ERROR",
    "CODE_TO_TOKEN",
    "VERIFY_PROFILE",
    "GRANT_CONSENT_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
  ],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "105050ff-c9f6-432c-a8f1-a8f682b39cd3",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "118fb6e1-4444-48a4-ad2d-774845423f62",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "a673a504-f7ce-43ad-8ba6-a86976999e07",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "b4d67800-766a-4cff-97b7-4cff6faaa952",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "ef217ae0-5f1e-472d-a692-c683d6c6b320",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "28ad18c8-8d27-4a53-9bfd-74bee148d973",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "8b47f0ac-ca06-4bb2-8726-12da6dc40c8c",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "b6022b3e-a7c0-4feb-bab0-3b23fe787d54",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "52ec26b4-06ec-42a6-8823-69bdd52fc095",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "5e77de88-dce2-4418-9947-2febd666ed8a",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "2d701df4-00d0-41e5-8e4a-ca1e487d8610"
          ],
          "secret": [
            "YhQmGou4OVaD0zZu3wFJKfz3zwmTSnXydhlL_BDSJ3LwZ7G41IG76ynBY1jVAYRisbF27SE7oTK_vG0RhkLpTg"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "ebd88c75-6200-4a24-b38b-877e154cb59e",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEArpN5QChqEgy4Hr6kKiAyzDI3j/Kw4Nmvpwg9UA350gmXPOWjGxBobWMl1+aHzgwKg0u1H4GLixRgxyTgPKZB0jzSGj3mPAARkTC4mzcdbgJZhp669PsrRdmnzPzV2obsbtX5flTQuf1PyUdHMlWVnT6Aj0AOFn5gFkCXYgm6Ca0qk/cZUS8EY1Tv3itC/9xXqjvxrqhaUIzxMSGNmbEjfMMYrnq6Y4aeoJRINV+jtmeeiSwQN4Iscyq6YJZ8M//adrZG4npLvF88hDKWXfcAu3U/r692yKSn4jWUteREXii3NbAtWcMNm+o+eJXvE6pldSSPYY/pv6oQ4grdtnXIvwIDAQABAoIBABKKq0gl2A45YkeHAVylYCp78uwhCf73tUZNA7tq9euvBRcnX17SgU+M8PSwvB/QUOrdBvcPr/Ms+OfDLOXZgAgvrt5b+1tyuRWYp8152cWuDjV+ymXr/2Pt2CVXfUc2frTO7oQnx1DZwg2jZRZy10SE4kFUu6pRRddXM5JAF42gtTF8QOwsMPyDJIrrHsELuhOwYCmMwxGOpTOI2IjKsosf+MfIGrGJNtGrvddkQOaO5U06GHmoFL5smpgQD75+CiTrYZvx4jFRh8q5j6a0ElowjlSc+DzQyEcyDJYozZrFVchK2eoDC33bDQxwjA318PRQL+C8M7G/WTgNaDg7xjECgYEA2Q5sAC6dL+AmrdXiy8+qkSLWETAwys0WzXrtwr4a8s8UYX4V3REhjFEJhdpqkEqhCXhNleDQsKY3QaYPnWj6CYCVav+68GuJajfO0cNNWeNZeT/Q+T9JAp8Z0Xw+b6Yf63Y23OsWVsD1qZiEykDkJY6dbzrlUrjrtZ+yoJdKDNMCgYEAzeXl07T0Wk9LWO47aL2ZyqtmOcT5MV/YpwC8zO4/yT2QXWkZCQDAOBYGZopAHe8njxp0GiLjqKBy9L6MXp0CT6nX8gB7mz2r+elIyJdKED2VJfGGfGRe6lULS0WcYBlW0ZKU0QziHBvo+bcJmTHuhlVcCgaXyvV388NdG6R0cOUCgYAe5ben+vqzIvQ+kJC9NG1yRYQ1ZCe95p3VWCdaLleFssaS7jDMjDC7WZnCbQn4SjdMMszQhfUPAEojVTEp1hSpn50lYwvIR3aDITiWkXeEUSGeaeAkasbI0b8KG+aDXCF1EhnTLr+6T7NoleZpJ/2R/xAYEkksklgzPW1fAMowswKBgQCTTiICN5kGL2rBohcg1Vz88Wk+dVyu5VqUCGQK3X0HFaN+IN3HYiEjPyavH8PFZr9Pk2Zy+HkVwEzeKqE0Y3Iu2l1jhtLn+tRaBHuM/yf+vIBDWCuWPRzm25cr8A5zdk11vD/53BS8dX9VgI0+a8mxk8o4ZgUdMEb0P9YSG7MuvQKBgDN9WkpNJgkpjwSPDwdG7GeF+eLAB7Vo94ZDVmiq528Pq8orQpMftsFthQxqZNHIVDxdOmKFU+HBiXuAM7yMf+GWvkao8ssvN3GQ+oDHMN+fxEif8JeVs3FV0ex1Q47dN1yWLzY93uo2VQFbsss2+eorFGEFHt17Df8Kb5I+fSuw"
          ],
          "certificate": [
            "MIICuTCCAaECBgGLCV4WYDANBgkqhkiG9w0BAQsFADAgMR4wHAYDVQQDDBVtYXJrZXRwbGFjZS1hcHAtcmVhbG0wHhcNMjMxMDA3MDg1OTAyWhcNMzMxMDA3MDkwMDQyWjAgMR4wHAYDVQQDDBVtYXJrZXRwbGFjZS1hcHAtcmVhbG0wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCuk3lAKGoSDLgevqQqIDLMMjeP8rDg2a+nCD1QDfnSCZc85aMbEGhtYyXX5ofODAqDS7UfgYuLFGDHJOA8pkHSPNIaPeY8ABGRMLibNx1uAlmGnrr0+ytF2afM/NXahuxu1fl+VNC5/U/JR0cyVZWdPoCPQA4WfmAWQJdiCboJrSqT9xlRLwRjVO/eK0L/3FeqO/GuqFpQjPExIY2ZsSN8wxiuerpjhp6glEg1X6O2Z56JLBA3gixzKrpglnwz/9p2tkbieku8XzyEMpZd9wC7dT+vr3bIpKfiNZS15EReKLc1sC1Zww2b6j54le8TqmV1JI9hj+m/qhDiCt22dci/AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAHrM8lT1yn7FDeCv3PHhD5BTzhXqKPGEGSu7dvhhreEMbuPn8OKVaKhfTNRUyDovK2uOALVHREMr4jw/zhCcPqS6Wcv+DFDKl6tohb0REor5Smcbh/hTmyFpzLut6fLRNJFmkrVWMUQ3pn9Cs3A9ceUzk+F6J4vgv+Dv+rh+pQX3wmFeMCeoXKB5PtlBFhI35NWmzYr9LT2bciyBMraVxjTECai+nPfYuuHoICVvayysmOKy87rBEiTnFwNMW9pyScCDwKbKGT9+niafcAPib4DkVgdSBqcdVQC3aWm/GfxjwFt+UfLgk+J3e8wwgy43jNyctK3mT6FIP+hvPC/fvTU="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "9fa57796-4ce6-4127-b7df-8da9c8572d3c",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "7d6a95b8-f010-4218-b6fd-8b2c4aa608f6"
          ],
          "secret": [
            "oEi194ukw22KyxHYxEx0uw"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "939cfec5-d991-4723-adaf-85bb4705fd1a",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAhhmN7cNo81yYdcP3qtfsC+HwmjY0+7RXb7ngxCSkkIXX3E/RL2hWSVsxlvFc0z6U+ZbVmrE5uNht6997AzkZxC1cLN0Gsui5J69zgdeMiMTaa2Ax+aH+u+0/DX9QPb11VB3FR/B+DWZQFD/r635Ot4IpTLOmiVut1mp+2CZnH8iUzGAJ6kCDsIal5h2K//FV4EJM79H0xhwOA7fhvheKw5d+I/7wxp8l9gC6CO9jHtbUm5tBy6RGrtK2gIpayPSbFW0CDtGKWUgnAknzw6B1qPGtiTkNet/eV0tPxsqU6C4Gy+msgrcSyyGeU4VnXxUZxHrkmfKDd3aSkRKamTGnDQIDAQABAoIBAAqHcaEoTXKEQ/VFMopPw1kof52AIZdc0Nu1JsyHywMM+0axXq2f/dxrJGDjaSQt/wD84p8viKZ2meTiCnTVlCwW2qysGxVLmBQhXsqkW8S2Xib9qdbdrRRg26lJ5IlAebil0MJmA+O185YvcazvISuf9PGwjmQtFmBmQrjihQjV+Byguhcj2QjmB1nBNhOo8K0K2sPLuqx/HS7+TbPf0juB20HJuLfjdkN85sxXBLODDeAAlY8SYHw/eUDV9Mw+dqiRg/YKSw+142jbeE+I9bJCSe+VXrIU6+ACjW7pSGGbQ/Ff++Pp6EFapGhLoNYcKtY4ar/jfexx5iFsXFhhaVECgYEAvV1B11bp8duvgMm1dEOC80zKkO0Rful08paV197nNKC96sF0Uy0vM6hqXVLr9S7RYdVVOnKlwO6Mz9TozKpGpXWh8wR8zorkg6vKbUJssuZqL4wBR5N/si8j1wyYC5KBbdwnamFJjyTWA1Zp9rZcclL1CJ/Jze9JNagY33zfd9ECgYEAtUnWqLAr1pxVfA87dY2adYgV/4OEWgpiJRwXWFSyVv2LqrXcapmwg5/tb1e79jnDPKs2MVqDyXEfiA5JdD1v0HwAg3CN3b9xIG8XzRlyrslx+mUUiUxskyRwYfslv6eOGSwPKIbnDpmmy9Vq4knGDUZAuJPS+YSnXtvxBhWBRn0CgYAqbaa+9P5d7ncYSBmb/zRsBxyr9DIjWXOWlx7jy1HKfOmQm9/QcyNMU8PhPR8ZRHAtl3sNKXryC4EJYA75LH2/vOeYZ7z/GiexSOCGMofgXbgVBy2SN/44kk9Zc7ztetn9H4LFVx8AL6S0AryjRqDYDLZSRFsXBTJGD2/jQztewQKBgQCAhIQEuj+ZuOJxPGsufuBNCdhud1HQcyP4ot155TE4si3dK2fCuomEBlBQaqX5fCGIVOfqPPzIRcXQsjAok5U8+2txws0PsrQEBj2dTLkcZ/rBQ/83BlLCTUbObzjnkWUPO0jTti7/DrZMMlO/cAVTS8Z+E22xLfVpLgrEAWLQEQKBgQCQ5Bv9HroBoqt/0bvEyLAxrcuAXzZCUjcUyYib2TIQD9wmdSinEPOUNsKMBBfiCAB0ZPDWSm15nsyFlhCCbrj5AZ8sL0HSnd7FDrkwNJxH7IpKXaGNMapu+BVW2wDAZGoqdzzOYvumCesucrCR/6MxfOKZMxd0sZlqtRkif9tLMg=="
          ],
          "certificate": [
            "MIICuTCCAaECBgGLCV4XMzANBgkqhkiG9w0BAQsFADAgMR4wHAYDVQQDDBVtYXJrZXRwbGFjZS1hcHAtcmVhbG0wHhcNMjMxMDA3MDg1OTAzWhcNMzMxMDA3MDkwMDQzWjAgMR4wHAYDVQQDDBVtYXJrZXRwbGFjZS1hcHAtcmVhbG0wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCGGY3tw2jzXJh1w/eq1+wL4fCaNjT7tFdvueDEJKSQhdfcT9EvaFZJWzGW8VzTPpT5ltWasTm42G3r33sDORnELVws3Qay6Lknr3OB14yIxNprYDH5of677T8Nf1A9vXVUHcVH8H4NZlAUP+vrfk63gilMs6aJW63Wan7YJmcfyJTMYAnqQIOwhqXmHYr/8VXgQkzv0fTGHA4Dt+G+F4rDl34j/vDGnyX2ALoI72Me1tSbm0HLpEau0raAilrI9JsVbQIO0YpZSCcCSfPDoHWo8a2JOQ16395XS0/GypToLgbL6ayCtxLLIZ5ThWdfFRnEeuSZ8oN3dpKREpqZMacNAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGQFnk69HvUHv6Mowvv8aIJxveyPKoa/W05jm8XAi6Pig8e9FwJjz9PQkMhjEj0GuZ1DFaG1lT/nfUejO/AuBtE2bndJwW8yLhxdB12ouD6C3Uz7+nz55rVDkNvINeBXSCNPrjBT5+JtYBbcuEt+ErhNTQK8TCqmaGx24sYbN43MLZo3/MVMfccP55g53lbBr0cupQevDMY1yoMHgOjVU0epUEA3ZQodHIPoZB1wAB4r3Eczr5hkVm9813H6bNtg1h8bmb24f79ZQEjghfG0kS7sKqKCiFHqF9VJf2cuqGtZjLSBtH8yYRj/1sZuwMe56L9+5iDtdn642iXqXqgoxA8="
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "4b83d384-939a-4cce-8130-79a841dcca7e",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3521b6f6-bbf7-4a6c-9943-d0cc2ddecf51",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "362efd07-3b13-4143-9f6d-8d3caf98e424",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6c02a93f-5b22-4611-a9f2-2a07204afa79",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a585709e-7f75-45e8-9390-1a9c0a6717be",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1ad4694d-e2c0-46f7-b325-d7f957ca5983",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e461faff-c357-41ac-b019-ac4680a91b5b",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "40160b41-5be9-4cc4-ae0d-8b880ca645ff",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8013ccce-9ae8-4683-b4cc-ba5e55dfec3b",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "132bc9df-509d-42ed-8690-ca579fda9741",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5af3bd0a-5f32-4549-98e9-7ada6fba4b77",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "008e9b2c-7911-49a3-9b4a-a11b1c288472",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "adb64bab-edb3-4d25-b978-d8534dce38ed",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d6e8560b-3640-42e6-afd0-23430f682a1c",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "86ae3601-dff0-40be-bba7-81cd258aa47d",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "90d1e91e-3936-4782-a61f-29b90a218836",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e238dd42-9882-4533-887a-9fdab08e67ef",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e14c686d-0e85-4cd0-9158-2770548e243a",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "047c1b75-7961-49ab-a565-f938cd8e9419",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "33fbe60f-0344-4aff-bb25-42317a37c43e",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan-execute-actions": "",
    "actionTokenGeneratedByUserLifespan-verify-email": "",
    "clientOfflineSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan-reset-credentials": "",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "1200",
    "actionTokenGeneratedByUserLifespan-idp-verify-account-via-email": "",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "shortVerificationUri": ""
  },
  "keycloakVersion": "22.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}